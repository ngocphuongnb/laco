'use strict';

const path = require('path');
const logger = lacoLib('libs/logger');
const UIBase = lacoLib('libs/ui/base');

class AdminBSB extends UIBase {
    constructor(manager, ui) {
        super(manager, ui, {});

        this.discovery(err => {
            this.laco.emit(!err ? 'ui.AdminBSB.loaded' : 'ui.AdminBSB.error', err);
        });

        this.addTasks([{
                name: 'prepare',
                description: 'Create UI output dir',
                cmd: 'mkdir',
                target: ['/js', '/css', '/images'],
            },
            {
                name: 'clean',
                description: 'Clear old output files',
                cmd: 'rm',
                target: ['/js/*', '/css/*', '/images/*'],
            },
            {
                name: 'buildCommonStyle',
                description: 'Build common css file',
                cmd: (cmd, task, callback) => {
                    let gulp = cmd.gulp;

                    gulp.task('pluginScripts', () => {
                        logger.info('  [ext.admin.ui.AdminBSB] Running pluginScripts...');
                        return gulp
                            .src(path.join(this.extDir, 'node_modules/adminbsb-materialdesign/plugins/**/*.min.js'))
                            .pipe(cmd.gulpStripDebug())
                            .pipe(cmd.gulpUglify())
                            .pipe(cmd.gulpConcat('plugins.js'))
                            .pipe(gulp.dest('/js'))
                        // .on('end', callback).on('error', callback);
                    });

                    gulp.task('commonScripts', () => {
                        logger.info('  [ext.admin.ui.AdminBSB] Running commonScripts...');
                        return gulp
                            .src(path.join(this.extDir, 'node_modules/adminbsb-materialdesign/js/*.js'))
                            .pipe(cmd.gulpStripDebug())
                            .pipe(cmd.gulpUglify())
                            .pipe(cmd.gulpConcat('commons.js'))
                            .pipe(gulp.dest('/js'))
                        // .on('end', callback).on('error', callback);
                    });

                    gulp.task('pluginStyles', () => {
                        logger.info('  [ext.admin.ui.AdminBSB] Running pluginStyles...');
                        return gulp.src(path.join(this.extDir, 'node_modules/adminbsb-materialdesign/plugins/**/*.min.css'))
                            .pipe(cmd.gulpSass().on('error', cmd.gulpSass.logError))
                            .pipe(cmd.gulpConcat('plugins.css'))
                            .pipe(cmd.gulpMinifyCss())
                            .pipe(gulp.dest('/css'));
                    });

                    gulp.task('commonStyles', () => {
                        logger.info('  [ext.admin.ui.AdminBSB] Running commonStyles...');
                        return gulp.src([
                                path.join(this.extDir, 'node_modules/adminbsb-materialdesign/css/materialize.css'),
                                path.join(this.extDir, 'node_modules/adminbsb-materialdesign/css/themes/all-themes.min.css'),
                                path.join(this.extDir, 'node_modules/adminbsb-materialdesign/css/style.min.css'),
                            ])
                            .pipe(cmd.gulpSass().on('error', cmd.gulpSass.logError))
                            .pipe(cmd.gulpConcat('style.css'))
                            .pipe(cmd.gulpMinifyCss())
                            .pipe(gulp.dest('/css'));
                    });

                    gulp.task('alltasks', ['pluginStyles', 'commonStyles', 'pluginScripts', 'commonScripts'])
                        .on('data', data => {
                            console.log(data)
                        })
                        .on('message', data => {
                            console.log(data)
                        })
                        .on('end', cb => {
                            callback();
                        });

                    gulp.start.apply(gulp, ['alltasks']);
                }
            }
        ]);
    }
}

module.exports = AdminBSB;