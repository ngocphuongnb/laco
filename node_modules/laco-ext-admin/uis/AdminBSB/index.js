'use strict';

const UIBase = lacoLib('libs/ui/base');

class AdminBSB extends UIBase {
    constructor(manager, ui) {
        super(manager, ui, {});

        this.discovery(err => {
            this.laco.emit(!err ? 'ui.AdminBSB.loaded' : 'ui.AdminBSB.error', err);
        });

        this.addTasks([{
                name: 'prepare',
                description: 'Create UI output dir',
                cmd: 'mkdir',
                target: ['/js', '/css', '/images'],
            },
            {
                name: 'clean',
                description: 'Clear old output files',
                cmd: 'rm',
                target: ['/js/*', '/css/*', '/images/*'],
            },
            {
                name: 'buildCommonJs',
                description: 'Build common js file',
                cmd: 'build',
                target: '/js/common.js',
                dependencies: [
                    'public/js/file1.js',
                    'public/js/file2.js',
                    'public/js/file3.js',
                ]
            },
            {
                name: 'buildCommonStyle',
                description: 'Build common css file',
                cmd: 'build',
                target: '/css/common.css',
                dependencies: [
                    'public/css/file1.css',
                    'public/css/file2.css',
                    'public/css/file3.css',
                ]
            }
        ]);
    }
}

module.exports = AdminBSB;