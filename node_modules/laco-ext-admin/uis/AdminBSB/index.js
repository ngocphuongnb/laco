'use strict';

const UIBase = lacoLib('libs/ui/base');

class SemanticUIAdmin extends UIBase {
    constructor(subapp, ui) {
        super(subapp, ui, {});

        this.discovery(err => {
            this.subapp.laco.emit(!err ? 'ui.AdminBSB.loaded' : 'ui.AdminBSB.error', err);
        });

        this.addTasks([{
                name: 'createBSB',
                cmd: 'mkdir',
                target: ['/bsb', '/bsb/js', '/bsb/css', '/bsb/images'],
            },
            {
                name: 'cleanBSB',
                cmd: 'rm',
                target: ['/bsb/js/*', '/bsb/css/*', '/bsb/images/*'],
            },
            {
                name: 'buildCommonJs',
                cmd: 'build',
                target: '/bsb/js/common.js',
                dependencies: [
                    'public/js/file1.js',
                    'public/js/file2.js',
                    'public/js/file3.js',
                ]
            },
            {
                name: 'buildCommonStyle',
                cmd: 'build',
                target: '/bsb/css/common.css',
                dependencies: [
                    'public/css/file1.css',
                    'public/css/file2.css',
                    'public/css/file3.css',
                ]
            }
        ]);
    }
}

module.exports = SemanticUIAdmin;