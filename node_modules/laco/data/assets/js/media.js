Dropzone.autoDiscover = false;
var LacoMedia = function() {
    var self = {};
    self.selectors = ['.laco-upload-holder'];
    var lacoDropzone = $(self.selectors.join(',')).dropzone({
        previewTemplate: $('#laco-dz-preview-tpl').html(),
        thumbnailWidth: 300,
        thumbnailHeight: 300,
        parallelUploads: 1,
        autoQueue: true,
        url: lacoMedia.uploadPath,
        //acceptedFiles: "*",
        paramName: "lacoFile",
        accept: function(file, done) {
            var thumbnail = $('.thumb', file.previewElement);
            var fileMimeType = file.type;
            var fileMimeTypes = fileMimeType.split('/');
            if(fileMimeTypes[0] != 'image') {
                var fps = file.name.split('.');
                var fileExt = fps.length > 1 ? file.name.split('.').pop() : '...';
                thumbnail.replaceWith(`<div class="thumb not-image thumb-file-${fileExt}"><span>${fileExt}</span></div>`)
            }
            done();
        },
        success: function(file, res) {
            if(typeof res == 'string' || !res.status) {
                var serverMessage = (typeof res == 'string') ? res : res.message;
                serverMessage = $('<div>' + serverMessage + '</div>').text().replace(/\n/g, ' ');
                $(file.previewElement).addClass('dz-error');
                $('.dz-message.message span', file.previewElement).html(serverMessage);
            }
            else {
                $(file.previewElement).addClass('dz-success ready-media media-' + res.result._id);
                $(file.previewElement).attr({
                    'data-alt': res.result.alt,
                    'data-date': res.result.date,
                    'data-description': res.result.description,
                    'data-mimetype': res.result.mimetype,
                    'data-name': res.result.name,
                    'data-size': res.result.size,
                    'data-source': res.result.source,
                    'data-thumb': res.result.source,
                    'data-id': res.result._id,
                    'data-ext': res.result.source.split('.').pop()
                });
                $('.dz-message.message span', file.previewElement).html(res.message);
            }
        },
        error: function(file, m) {
            var serverMessage = $('<div>' + m + '</div>').text().replace(/\n/g, ' ');
            $(file.previewElement).addClass('dz-error');
            $('.dz-message.message span', file.previewElement).html(serverMessage);
        },
        headers: {
            'x-csrf-token': $('meta[name="_csrf"]').attr('content')
        }
    });

    var mediaListing = function() {
        var selectedMedias = {};
        var mediaPreviewer = $('#laco-media-previewer');
        var listener = function() {
            $(document).on('click', '.ready-media', function(e) {
                var thisMedia = $(this);
                var thisMediaId = thisMedia.data('id');
                if(!lacoMedia.isMulti) {
                    selectedMedias = {};
                    $('.ready-media').not('.media-' + thisMediaId).removeClass('selected');
                }
                if(!thisMedia.hasClass('selected')) {
                    thisMedia.addClass('selected');
                    selectedMedias[thisMediaId] = {
                        id: thisMedia.data('id'),
                        alt: thisMedia.data('alt'),
                        name: thisMedia.data('name'),
                        ext: thisMedia.data('ext'),
                        size: thisMedia.data('size'),
                        date: thisMedia.data('date'),
                        source: thisMedia.data('source'),
                        thumb: thisMedia.data('thumb'),
                        mimetype: thisMedia.data('mimetype'),
                        isImage: !thisMedia.hasClass('not-image')
                    };
                    // selectedMedias.push({
                    //     id: thisMedia.data('id'),
                    //     alt: thisMedia.data('alt'),
                    //     name: thisMedia.data('name'),
                    //     size: thisMedia.data('size'),
                    //     date: thisMedia.data('date'),
                    //     source: thisMedia.data('source'),
                    //     thumb: thisMedia.data('thumb'),
                    //     mimetype: thisMedia.data('mimetype')
                    // });
                }
                else {
                    thisMedia.removeClass('selected');
                    delete selectedMedias[thisMediaId];
                }
                
                var selectedMediaKeys = Object.keys(selectedMedias);
                if(!!selectedMediaKeys.length && (previewData = selectedMedias[selectedMediaKeys[selectedMediaKeys.length - 1]])) {
                    var thumbStr = previewData.isImage
                        ? `<div class="thumbnail thumb">
                            <img src="${previewData.thumb}" class="img-responsive" />
                            <div class="media-name">${previewData.name}</div>
                        </div>`
                        : `<div class="thumbnail thumb not-image thumb-file-${previewData.ext}">
                            <span>${previewData.ext}</span>
                            <div class="media-name">${previewData.name}</div>
                        </div>`
                    mediaPreviewer.html(`
                        ${thumbStr}
                        <div class="action-btns">
                            <a href="${previewData.source}" target="_blank" class="btn btn-success no-pipe">View</a>
                            <a href="${previewData.source}" target="_blank" class="btn btn-danger no-pipe">Delete</a>
                        </div>
                    `);
                }
                else mediaPreviewer.html(``);
            });
        };

        listener();
    };

    mediaListing();

    return lacoDropzone;
};
var lacoDropzone = new LacoMedia();