"use strict";

const fs = require('fs');
const path = require('path');
const ProgressBar = require('progress');
const colors = require("colors/safe");
const logger = lacoLib('./libs/logger');
const lacoConfig = require('./config');
const lacoInstall = require('./install');

const config = callback => lacoConfig(callback);

const install = () => {
    logger.info('[Packer.install] Installing Laco app...');
    let bar = new ProgressBar(':percent [:bar]\n', {
        curr: 0,
        complete: '=',
        incomplete: '.',
        width: 50,
        total: 100
    });
    lacoInstall.isAppLocked()
        .then(() => {
            bar.tick(20);
            return lacoInstall.addAdministratorUser();
        })
        .then(() => {
            bar.tick(50);
            return lacoInstall.writeAppLockFile();
        })
        .then(() => {
            bar.tick(30);
            logger.info(`[Packer.install] Success! Your Laco app was installed!`);
            logger.info(`[Packer.install] You can now run ${colors.green('./laco start')} to stat using your app!`);
            process.exit();
        })
        .catch(err => {
            logger.error(err);
            logger.info('Installer exitted!');
            process.exit();
        });  
}

const update = () => {
    logger.info('[Packer.update] Updating Laco app...');
    let bar = new ProgressBar('Update Laco app: :percent :bar', {
        complete: '=',
        incomplete: '.',
        width: 50,
        total: 100
    });
    let timer = setInterval(function () {
        bar.tick(1);
        if (bar.complete) {
            console.log('Completed');
            clearInterval(timer);
        }
    }, 100);
}

exports.config = config;
exports.install = install;
exports.update = update;