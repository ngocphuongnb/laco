'use strict';

const _ = require('lodash');
const logger = require('../logger');

const UITask = require('./task');
const UIBase = require('./base');
const UILayout = require('./layout');
const UIView = require('./view');

class UIManager {
    constructor(subapp) {
        this.subapp = subapp;
        this.registerdUIs = {};

        this.defaultUI = {
            name: null,
            label: null,
            handler: null,
        }
    }

    register(uis) {
        if (!_.isArray(uis)) {
            uis = [uis];
        }

        for (var i = 0; i < uis.length; i++) {
            let ui = _.merge(_.clone(this.defaultUI), uis[i]);

            if (!ui.name) {
                logger.error(`[UIMana.register] [${this.subapp.name}] Invalid UI: `, ui);
            } else {
                logger.info(`[UIMana.register] [${this.subapp.name}] Registering ui: ${ui.name}`);
                this.registerdUIs[ui.name] = new ui.handler(this, ui);
            }
        }
    }
}

exports.Manager = UIManager;
exports.Task = UITask;
exports.Base = UIBase;
exports.Layout = UILayout;
exports.View = UIView;