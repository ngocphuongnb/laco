// Compiled using marko@4.2.8 - DO NOT EDIT
"use strict";

var marko_template = module.exports = require("marko/html").t(__filename),
    marko_helpers = require("marko/runtime/html/helpers"),
    marko_escapeXml = marko_helpers.x,
    marko_forEachProp = require("marko/runtime/helper-forEachProperty"),
    marko_escapeXmlAttr = marko_helpers.xa,
    marko_attrs = marko_helpers.as;

const path = require('path');
const _ = require('underscore');
const helper = lacoLib('./libs/helper');

function render(input, out) {
  var data = input;

  let fields = _.isObject(data.fields) ? data.fields : {};

  let options = _.isObject(fields.options) ? fields.options : {};

  let fieldId = data.name.replace(['[', ']'], '_');

  out.w("<div id=\"" +
    marko_escapeXmlAttr(fieldId) +
    "\" class=\"nb-checkbox-group col s12 m" +
    marko_escapeXmlAttr(fields.cols) +
    "\"><div class=\"input-field nb-checkbox-field-label\"><b>" +
    marko_escapeXml(fields.label) +
    "</b></div>");

  marko_forEachProp(fields.options, function(ov, ok) {
    out.w("<div class=\"input-field nb-checkbox-field\">");

    let checked = (fields.value.indexOf(ok) > -1) ? 'checked' : '';

    out.w("<input name=\"" +
      marko_escapeXmlAttr(fields.name) +
      "[]\" class=\"filled-in\" id=\"route-selected-" +
      marko_escapeXmlAttr(ok) +
      "\" type=\"checkbox\" value=\"" +
      marko_escapeXmlAttr(ok) +
      "\"" +
      marko_attrs(checked) +
      "><label for=\"route-selected-" +
      marko_escapeXmlAttr(ok) +
      "\">" +
      marko_escapeXml(ov) +
      "</label></div>");
  });

  out.w("';</div>");
}

marko_template._ = render;

marko_template.meta = {};
