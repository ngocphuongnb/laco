"use strict";

var path = require('path');
var _ = require('underscore');
var helper = require(path.join(LIBS_DIR, 'helper'));
var taxUtils = require(path.join(LIBS_DIR, 'taxonomy/tax_utils'));
module.exports = function(name, data) {
    var fieldId = name.replace('[', '_');
    fieldId = fieldId.replace(']', '_');
    var taxes = helper.treeBuilder(taxUtils.get(), '_id', 'parent');
    if(typeof data.required == 'undefined' || data.required == false) {
        var placeholder = _.isEmpty(taxes) ? lang('Nothing to select') : lang('Select');
    }
	else var placeholder = 'Select';
    var fe = '\
    <div class="input-field nb-select-field col s12 m' + data.cols + '">\
        <select data-placeholder="' + placeholder + '" id="' + fieldId + '" name="' + name + '" multiple>';

	var _values = !_.isArray(data.value) ? data.value.toString().split(',') : data.value;
    var values = _.map(_values, function(v) {
        return v.toString();
    });
    _.mapObject(taxes, function(tax) {
        if(!_.isString(data.ref_type) || (_.isString(data.ref_type) && (data.ref_type == '' || data.ref_type == tax.type))) {
            if(_.isString(values)) values = [values];
            if(!_.isArray(values)) values = [];
            var selected = (values.indexOf(tax._id.toString()) > -1) ? ' selected' : '';
            fe += '<option value="' + tax._id + '"' + selected + '>' + tax.prefix + tax.name + '</option>';
        }
    });
    fe += '\
        </select>\
        <label for="' + fieldId + '" class="">' + data.label + '</label>\
    </div>';
    return fe;
};



