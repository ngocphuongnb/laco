"use strict";
const slug = require('slug');
const path = require('path');
const randomstring = require("randomstring");

global.lacoLib = moduleFile => require(path.join(LACO_ROOT, moduleFile));

global.lacoAsset = assetFile => path.join(LACO_ROOT, 'data/assets', assetFile);

global.bytesToSize = bytes => {
   let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
   if (bytes == 0) return '0 Byte';
   let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
   return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
};

global.lang = str => str;

const caller = () => {
    try {
        let err = new Error();
        let callerfile;
        let currentfile;

        let _prepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace =  (err, stack) => stack;

        err.stack.shift();
        currentfile = err.stack.shift();

        while (err.stack.length) {
            callerfile = err.stack.shift();
            if(currentfile !== callerfile) {
                Error.prepareStackTrace = _prepareStackTrace;
                return callerfile;
            }
        }
    } catch (err) {
    }
    return undefined;
}

const cleanUrl = str => slug(str);

String.prototype.capitalizeFirstChar = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
}

exports.randomstring = randomstring;
exports.caller = caller;
exports.cleanUrl = cleanUrl;