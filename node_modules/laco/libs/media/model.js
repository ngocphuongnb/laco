"use strict";

"use strict";
const mongoose = require('mongoose');
const _ = require('underscore');
const path = require('path');
const autoIncrement = require('mongoose-auto-increment');
const postFind = require('./postFind');
const g = lacoLib('./libs/global');
const MediaObject = lacoLib('./libs/media/object');

let register = () => {
    g.schemas.media = new mongoose.Schema({
        name:  {
            type: String,
            required: true
        },
        user: {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'User',
            required: false
        },
        description: String,
        alt: String,
        source: String,
        encoding: String,
        mimetype: String,
        size: Number,
        date: {
            type: Date,
            default: Date.now
        }
    });

    // g.schemas.media.plugin(postFind, {
    //     find: function(results, done) {
    //         console.log('results');
    //         console.log(results);
    //         done(null, results);
    //     },
    //     findOne: [ 
    //         function(result, done) {
    //             done(null, result)
    //         },
    //         function(result, done) {
    //             done(null, result)
    //         }
    //     ]
    // });

    // g.schemas.media.statics.find = function() {
    //     return g.backupSchemas.find(arguments);
    // }

    g.schemas.media.post('init', function(doc) {
        console.log('%s has been initialized from the db', doc._id);
    });

    g.models.media = mongoose.model('medias', g.schemas.media);
};

exports.register = register;