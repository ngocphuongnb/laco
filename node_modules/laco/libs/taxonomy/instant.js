"use strict";

const form = lacoLib('./libs/form');
const taxonomyType = require('./type');
const taxonomyProvider = require('./provider');

let instant = class TaxonomyInstant {
    constructor(taxId, taxType) {
        this.taxId = taxId;
        this.taxType = taxType;
        this.taxonomyProfile = taxonomyType.get(taxType);
    }

    getForm() {
        return new Promise((resolve, reject) => {
            if(!this.taxonomyProfile) return resolve({});

            let taxonomyItemDataProvider = () => {
                return this.taxId ? taxonomyProvider.withIds(taxId) : new Promise((resolve, reject) => {
                    resolve({});
                });
            }

            taxonomyItemDataProvider().then(taxItemData => {
                let f = form.prepare();
                f.addProperties(this.taxonomyProfile.properties);
                f.addFields(this.taxonomyProfile.fields);
                resolve(f.generate(taxItemData));
            }).catch(e => {
                resolve({});
                console.log(e);
            });
        });
    }
}

module.exports = instant;