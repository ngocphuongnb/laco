"use strict";
const mongoose = require('mongoose');
const path = require('path');
const autoIncrement = require('mongoose-auto-increment');
const g = lacoLib('./libs/global');

let register = () => {
    g.schemas.taxonomy = new mongoose.Schema({
        name:  String,
        url:   {
            type: String,
            unique : true,
            required : true,
            dropDups: true
        },
        image:   String,
        parent: {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'taxonomies',
            required: false
        },
        content:   String,
        type: {
            type: 'String',
            default: 'category',
            required: true
        },
        fields: {},
        logs: {},
        properties: {
            total_views: 0,
            total_comments: 0,
            total_rates: 0,
            rate_score: 0
        },
        date: {
            type: Date,
            default: Date.now
        },
        user: {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'User',
            required: false
        }
    });

    g.schemas.taxonomy.index({
        url: "text",
        name: "text"
    }, {
        weights: {
            url: 10,
            name: 8
        },
        name: 'taxonomyTextIndex'
    });
    g.schemas.taxonomy.plugin(autoIncrement.plugin, {
        model: 'taxonomies',
        field: 'intId',
        startAt: 1,
        incrementBy: 1
    });
    g.models.taxonomy = mongoose.model('taxonomies', g.schemas.taxonomy);
};

exports.register = register;