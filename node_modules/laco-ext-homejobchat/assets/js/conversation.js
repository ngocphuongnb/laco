// if (typeof HJConversation !== 'undefined') {
//     throw new Error('[HJCHAT] HJConversation was loaded, it should be loaded only one time!');
// }

function HJConversation(conversationInfo, manager) {
    var _this = this;
    this.manager = manager;
    this.options = manager.options;
    Object.assign(this, {
        triggerElm: null,
        identity: null,
        sender: null,
        active: false,
        new: false,
        loaded: false,
        page: 1
    }, conversationInfo);

    this.triggerElm.on('click', function(event) {
        event.preventDefault();
        _this.open();
    });
}

HJConversation.prototype.open = function() {
    this.manager.formElm.data('identity', this.identity);
    this.manager.formElm.data('sender', this.sender);

    var _this = this;
    var currentHash = window.location.hash.replace('#', '');

    if (currentHash != this.identity) {
        window.location.hash = '#' + this.identity;
    }

    if (!this.loaded) {
        this.loaded = true;
        this.manager.socket.emit(this.manager.events.USER_IDENTITY, this.identity);

        var conversationElm = $(this.options['ui.conversation.templateSelector']).clone();
        conversationElm.attr('id', this.options['ui.conversation.idPrefix'] + this.identity);
        conversationElm.addClass(this.options['ui.conversation.itemClass']);
        conversationElm.removeClass(this.options['ui.conversation.templateSelector'].replace(/[\.#]/g, ''));
        $(this.options['ui.conversation.wrapperSelector']).append(conversationElm);
        this.options['ui.conversation.userInfo'](this.identity, this.options.userIdentity, $(this.options['ui.msg.listSelector'], conversationElm));
        this.options['ui.conversation.loadMsg'](
            this.identity,
            this.options.userIdentity,
            $(this.options['ui.msg.listSelector'], conversationElm),
            this.page,
            function() {
                _this.manager.scrollToBottom(_this.identity);
            }
        );
    }

    $(this.options['ui.conversation.triggerSelector']).removeClass('active');
    $(this.options['ui.conversation.triggerIdPrefix'] + this.identity).addClass('active');
    $('.' + this.options['ui.conversation.itemClass']).hide();
    $('#' + this.options['ui.conversation.idPrefix'] + this.identity).show();

    this.triggerElm.addClass('active');
    $(this.options['ui.form.inputSelector'], $(this.options['ui.form'])).focus();
}