'use strict';

const mongoose = require('mongoose');
const logger = lacoLib('libs/logger');
const BaseExtension = lacoLib('libs/extension/base');

class LacoHomeJobChat extends BaseExtension {
    constructor(laco) {
        super(laco);
        this.name = 'homejobchat';
        let chatApp = new this.laco.SubApp(this.laco, 'homejobchat');

        chatApp.router.register({
            path: '/',
            name: 'index',
            get: 'chat'
        });
        chatApp.controller.register({
            name: 'chat',
            handler: require('./controllers/chat')
        });

        this.laco.subAppManager.register('/chat', chatApp);

        this.laco.socket.on('connection', function (socket) {
            console.log('a user connected');
            socket.on('disconnect', function () {
                console.log('user disconnected');
            });
            socket.on('chat message', function (msg) {
                socket.emit('chat message', msg);
            });
        });

        mongoose.connect(process.env.HOMEJOB_CHAT_DB_CONNECTION, {}, err => {
            if (err) {
                return logger.error('[ext.homejobchat] Cannot connect to database: ', err);
            }

            logger.info('[ext.homejobchat] Connected to database...');
            this.laco.emit('ext.homejobchat.init');
        });
    }
}

module.exports = LacoHomeJobChat;