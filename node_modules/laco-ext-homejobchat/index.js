'use strict';

const mongoose = require('mongoose');
const logger = lacoLib('libs/logger');
const BaseExtension = lacoLib('libs/extension/base');
const HJChatEvents = require('./assets/js/shared').ChatEvents;

class LacoHomeJobChat extends BaseExtension {
    constructor(laco) {
        super(laco);
        this.name = 'homejobchat';
        let chatApp = new this.laco.SubApp(this.laco, 'homejobchat');

        chatApp.router.register({
            path: '/',
            name: 'index',
            get: 'chat'
        });
        chatApp.controller.register({
            name: 'chat',
            handler: require('./controllers/chat')
        });
        this.laco.ui.register({
            name: 'HJAsset',
            default: true,
            handler: require('./ui')
        });

        this.laco.subAppManager.register('/chat', chatApp);

        this.laco.socket.on('connection', socket => {
            socket.on('identity', identity => {
                socket.join(identity);
            });

            socket.on(HJChatEvents.CREATE_CHAT_MSG, data => {
                this.laco.socket.sockets.in(data.identity).emit(HJChatEvents.NEW_CHAT_MSG, data);
            });

            // socket.on(HJChatEvents.CREATE_CHAT_MSG, function(msg) {
            //     socket.emit(HJChatEvents.NEW_CHAT_MSG, msg);
            // });
        });

        mongoose.connect(process.env.HOMEJOB_CHAT_DB_CONNECTION, {}, err => {
            if (err) {
                return logger.error('[ext.homejobchat] Cannot connect to database: ', err);
            }

            logger.info('[ext.homejobchat] Connected to database...');
            this.laco.emit('ext.homejobchat.init');
        });
    }
}

module.exports = LacoHomeJobChat;